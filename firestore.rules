rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Interviews collection
    match /interviews/{interviewId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
                   && request.resource.data.userId == request.auth.uid
                   && request.resource.data.createdAt == request.time;
      allow update: if isOwner(resource.data.userId)
                   && request.resource.data.userId == resource.data.userId;
      allow delete: if isOwner(resource.data.userId);

      // Nested answers subcollection
      match /answers/{answerId} {
        allow read: if isAuthenticated();
        allow write: if isOwner(get(/databases/$(database)/documents/interviews/$(interviewId)).data.userId);
      }
    }

    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }
  }
}